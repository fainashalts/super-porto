import { estimateContractGas, simulateContract } from 'viem/actions';
import { superchainTokenBridgeAbi } from '../../abis.js';
import { contracts } from '../../contracts.js';
import { baseWriteAction } from '../../core/baseWriteAction.js';
/**
 * Sends tokens to a target address on another chain. Used in the interop flow.
 * @category Actions
 * @param client - L2 Client
 * @param parameters - {@link SendSuperchainERC20Parameters}
 * @returns transaction hash - {@link SendSuperchainERC20ReturnType}
 */
export async function sendSuperchainERC20(client, parameters) {
    const { tokenAddress, to, amount, chainId, ...txParameters } = parameters;
    return baseWriteAction(client, {
        abi: superchainTokenBridgeAbi,
        contractAddress: contracts.superchainTokenBridge.address,
        contractFunctionName: 'sendERC20',
        contractArgs: [tokenAddress, to, amount, BigInt(chainId)],
    }, txParameters);
}
/**
 * Estimates gas for {@link sendSuperchainERC20}
 * @category Actions
 * @param client - L2 Client
 * @param parameters - {@link SendSuperchainERC20Parameters}
 * @returns estimated gas value.
 */
export async function estimateSendSuperchainERC20Gas(client, parameters) {
    const { tokenAddress, to, amount, chainId, ...txParameters } = parameters;
    return estimateContractGas(client, {
        abi: superchainTokenBridgeAbi,
        address: contracts.superchainTokenBridge.address,
        functionName: 'sendERC20',
        args: [tokenAddress, to, amount, BigInt(chainId)],
        ...txParameters,
    });
}
/**
 * Simulate contract call for {@link sendSuperchainERC20}
 * @category Actions
 * @param client - L2 Client
 * @param parameters - {@link SendSuperchainERC20Parameters}
 * @returns contract return value - {@link SendSuperchainERC20ContractReturnType}
 */
export async function simulateSendSuperchainERC20(client, parameters) {
    const { account, tokenAddress, to, amount, chainId } = parameters;
    const res = await simulateContract(client, {
        account,
        abi: superchainTokenBridgeAbi,
        address: contracts.superchainTokenBridge.address,
        chain: client.chain,
        functionName: 'sendERC20',
        args: [tokenAddress, to, amount, BigInt(chainId)],
    });
    return res.result;
}
//# sourceMappingURL=sendSuperchainERC20.js.map