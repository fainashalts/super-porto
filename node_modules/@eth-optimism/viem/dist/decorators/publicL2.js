import { publicActionsL2 as opPublicActionsL2 } from 'viem/op-stack';
import { buildExecutingMessage, estimateRelayCrossDomainMessageGas, estimateSendCrossDomainMessageGas, estimateSendETHGas, estimateSendSuperchainERC20Gas, getCrossDomainMessages, getCrossDomainMessageStatus, simulateRelayCrossDomainMessage, simulateSendCrossDomainMessage, simulateSendETH, simulateSendSuperchainERC20, } from '../actions/interop/index.js';
export function publicActionsL2() {
    return (client) => {
        return {
            ...opPublicActionsL2(),
            interop: {
                buildExecutingMessage: (args) => buildExecutingMessage(client, args),
                estimateSendCrossDomainMessageGas: (args) => estimateSendCrossDomainMessageGas(client, args),
                estimateRelayCrossDomainMessageGas: (args) => estimateRelayCrossDomainMessageGas(client, args),
                estimateSendSuperchainERC20Gas: (args) => estimateSendSuperchainERC20Gas(client, args),
                estimateSendETHGas: (args) => estimateSendETHGas(client, args),
                getCrossDomainMessages: (args) => getCrossDomainMessages(client, args),
                getCrossDomainMessageStatus: (args) => getCrossDomainMessageStatus(client, args),
                simulateSendCrossDomainMessage: (args) => simulateSendCrossDomainMessage(client, args),
                simulateRelayCrossDomainMessage: (args) => simulateRelayCrossDomainMessage(client, args),
                simulateSendSuperchainERC20: (args) => simulateSendSuperchainERC20(client, args),
                simulateSendETH: (args) => simulateSendETH(client, args),
            },
        };
    };
}
//# sourceMappingURL=publicL2.js.map