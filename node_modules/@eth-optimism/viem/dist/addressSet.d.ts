import type { Address } from 'viem';
export type AddressSet = {
    OpChainProxyAdmin: Address;
    AddressManager: Address;
    L1ERC721BridgeProxy: Address;
    SystemConfigProxy: Address;
    OptimismMintableERC20FactoryProxy: Address;
    L1StandardBridgeProxy: Address;
    L1CrossDomainMessengerProxy: Address;
    OptimismPortalProxy: Address;
    DisputeGameFactoryProxy: Address;
    AnchorStateRegistryProxy: Address;
    FaultDisputeGame: Address;
    PermissionedDisputeGame: Address;
    DelayedWETHPermissionedGameProxy: Address;
    DelayedWETHPermissionlessGameProxy: Address;
};
export declare const addressesToViemContractConstant: (addressSet: AddressSet, sourceId: number) => {
    readonly opChainProxyAdmin: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly addressManager: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly l1Erc721BridgeProxy: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly systemConfig: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly optimismMintableErc20FactoryProxy: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly l1StandardBridge: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly l1CrossDomainMessenger: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly optimismPortal: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly disputeGameFactory: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly anchorStateRegistry: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly faultDisputeGame: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
    readonly permissionedDisputeGame: {
        [x: number]: {
            address: `0x${string}`;
        };
    };
};
